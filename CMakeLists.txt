cmake_minimum_required(VERSION 2.8)
project(colnoise)
set(MyProjectSources gsl_errno.h gsl_matrix.h gsl_odeiv2.h stdio.h filesFolder.h simulationOptions.h results.h noiseDiss.h potential.h sdeSolver.h afterMath.h vectorCalculations.h main.cpp)
#set(MyProjectSources gsl_errno.h gsl_matrix.h gsl_odeiv2.h stdio.h filesFolder.h simulationOptions.h results.h noiseDiss.h potential.h sdeSolver.h afterMath.h vectorCalculations.h simultionOptionsXML.hxx randGenXML.hxx main.cpp )
if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

add_executable(colnoise main.cpp filesFolder.cpp simulationOptions.cpp results.cpp noiseDiss.cpp potential.cpp sdeSolver.cpp afterMath.cpp vectorCalculations.cpp)
#add_executable(colnoise main.cpp filesFolder.cpp simulationOptions.cpp results.cpp noiseDiss.cpp potential.cpp sdeSolver.cpp afterMath.cpp vectorCalculations.cpp simultionOptionsXML.cxx randGenXML.cxx)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/")
find_package (GSL)
if (GSL_FOUND)
  include_directories(${GSL_INCLUDE_DIRS})
  target_link_libraries (colnoise ${GSL_LIBRARIES})
endif (GSL_FOUND)
find_package(OpenMP)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()
FIND_PACKAGE( Boost 1.40 COMPONENTS program_options system filesystem REQUIRED )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIR} )
 MESSAGE(STATUS "** Boost Include: ${Boost_INCLUDE_DIR}")
 MESSAGE(STATUS "** Boost Libraries: ${Boost_LIBRARY_DIRS}") 
 
FIND_PACKAGE(XERCESC)
INCLUDE_DIRECTORIES( ${XERCESC_INCLUDE_DIR} )
 MESSAGE(STATUS "** Xerces Include: ${XERCESC_INCLUDE_DIR}")
 MESSAGE(STATUS "** Xerces Libraries: ${XERCESC_LIBRARIES}") 

TARGET_LINK_LIBRARIES( colnoise ${Boost_LIBRARIES} ${XERCESC_LIBRARIES})

if (${DEBUG}=y)
   set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
endif()
